apiVersion: apps/v1
kind: Deployment
{{/*apiVersion: argoproj.io/v1alpha1*/}}
{{/*kind: Rollout*/}}
metadata:
  namespace: {{ .Values.namespace.name }}
  name: {{ .Values.deployment.name }}
spec:
  {{- if and (not .Values.hpa.enabled) (not .Values.keda.enabled) }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app.name }}
      annotations:
        prometheus.io/port: "9404"
        prometheus.io/scrape: "true"
    spec:
      nodeSelector:
        billing: aws-proserve
        purpose: samsungfire-underwriting-system
      tolerations:
        - key: workload-type/x2idn-16xlarge-java
          operator: Equal
          value: "true"
          effect: NoSchedule
      serviceAccountName: hotelspecials-service-account
      volumes:
        - name: config-volume
          configMap:
            name: "xray-config"
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: {{ .Values.app.name }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.container.port }}
              protocol: TCP
          resources:
            requests:
              memory: "154Gi"
              cpu: "10000m"
            limits:
              memory: "154Gi"
              cpu: "15000m"
          env:
            - name: PROFILE
              valueFrom:
                configMapKeyRef:
                  key: environment
                  name: hotelspecials-configmap
            - name: JAVA_OPTS
              value: "-Xms20480M -Xmx148480M -Djava.awt.headless=true -Dspring.profiles.active=${SPRING_PROFILES_ACTIVE}"
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  key: environment
                  name: hotelspecials-configmap
            - name: DATABASE_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: database_endpoint
                  name: hotelspecials-configmap
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  key: database_port
                  name: hotelspecials-configmap
            - name: DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: database_username
                  name: hotelspecials-configmap
            - name: DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: database_password
                  name: hotelspecials-configmap
            - name: JDBC_CONNECTION_STRING
              value: "jdbc:mysql://${DATABASE_ENDPOINT}:${DATABASE_PORT}/travelbuddy?useSSL=false&autoReconnect=true"
            - name: JDBC_UID
              value: ${DATABASE_USERNAME}
            - name: JDBC_PWD
              value: ${DATABASE_PASSWORD}
            - name: TZ
              value: Asia/Seoul
        - name: xray-daemon
          image: amazon/aws-xray-daemon:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: xray-ingest
              containerPort: 2000
              protocol: UDP
            - name: xray-tcp
              containerPort: 2000
              protocol: TCP
          resources:
            requests:
              memory: "1Gi"
              cpu: "400m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          # Volume mount for X-Ray Configuration.
          volumeMounts:
            - name: config-volume
              mountPath: /aws/xray
              readOnly: true
---
# Configuration for AWS X-Ray daemon.
apiVersion: v1
kind: ConfigMap
metadata:
  name: xray-config
  namespace: {{ .Values.namespace.name }}
data:
  config.yaml: |-
    TotalBufferSizeMB: 24
    Socket:
      UDPAddress: "0.0.0.0:2000"
      TCPAddress: "0.0.0.0:2000"
    LocalMode: true
    Version: 2
    Logging:
      LogLevel: "debug"
