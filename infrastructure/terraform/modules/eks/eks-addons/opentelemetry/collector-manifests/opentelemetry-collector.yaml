apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry-collector
  namespace: ${namespace}
spec:
  mode: deployment # This configuration is omittable.
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
            cors:
              allowed_origins:
                - http://*
                - https://*
    processors:
    exporters:
      debug: {}
      logging:
        loglevel: debug
      otlp/jaeger: # Jaeger supports OTLP directly. The default port for OTLP/gRPC is 4317
        endpoint: "jaeger-collector.observability:4317"
        tls:
          insecure: true
      otlphttp/prometheus:
        endpoint: http://prometheus-kube-prometheus-prometheus.istio-system:9090/api/v1/otlp
        tls:
          insecure: true
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/connector/spanmetricsconnector
      prometheusremotewrite:
        # TODO: The Prometheus endpoint to send the metrics to.
        endpoint: http://prometheus-kube-prometheus-prometheus.istio-system:9090/api/v1/write
        tls:
          insecure: true
        target_info:
          enabled: true

    # connectors:
    #   spanmetrics:
    #     namespace: span.metrics

    connectors:
      spanmetrics:
        histogram:
          explicit:
            buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
          - name: http.method
            default: GET
          - name: http.status_code
        exemplars:
          enabled: true
        exclude_dimensions: ['status.code']
        dimensions_cache_size: 1000
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
        # aggregation_temporality: "AGGREGATION_TEMPORALITY_DELTA"
        metrics_flush_interval: 15s
        metrics_expiration: 0
        # events:
        #   enabled: true
        #   dimensions:
        #     - name: exception.type
        #     - name: exception.message
        resource_metrics_key_attributes:
          - service.name
          - telemetry.sdk.language
          - telemetry.sdk.name

    # connectors:
    #   spanmetrics:
    #     histogram:
    #       explicit:
    #         buckets: [50ms, 100ms, 200ms, 500ms, 1s, 5s]
    #     aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    #     metrics_flush_interval: 15s
    #     exemplars:
    #       enabled: false
    #     events:
    #       enabled: true
    #       dimensions:
    #         - name: exception.type
    #         - name: exception.message
    #     resource_metrics_key_attributes:
    #       - service.name
    #       - telemetry.sdk.language
    #       - telemetry.sdk.name

    # connectors:
    #   spanmetrics: {}

    service:
      extensions: [zpages]
      pipelines:
        logs:
          receivers: [otlp]
          exporters: [debug]
        traces:
          receivers: [otlp]
          processors: []
          exporters: [otlp/jaeger, spanmetrics]
        metrics:
          receivers: [spanmetrics]
          # exporters: [prometheusremotewrite, logging, debug]
          exporters: [otlphttp/prometheus, logging, debug]
    extensions:
      zpages:
        endpoint: 0.0.0.0:55679
